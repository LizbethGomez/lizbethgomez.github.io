"2.5 x ICS + LABA*High NO2",
"5 x ICS*High NO2",
"High NO2",
"1 x ICS + LABA",
"2.5 x ICS + LABA",
"5 x ICS"),
show.values=TRUE, show.p=TRUE,
title="IRR of AACD")
sjPlot:: tab_model(mod.ran.int,
show.re.var= TRUE,
pred.labels =c("(Intercept)",
"5 x ICS",
"2.5 x ICS +LABA",
"1 x ICS + LABA",
"High NO2",
"5 x ICS*High NO2",
"2.5 x ICS + LABA*High NO2",
"1 x ICS + LABA*High  NO2"),
dv.labels= "Effects on AACD")
mod.ran.int <- lmer(pfev_rate  ~ TRT+NO2_binary+TRT*NO2_binary+
(1|part)+(1|site), data = BARD1_AD)
summary(mod.ran.int)
car::Anova(glmer(pfev_rate ~ TRT + NO2_binary+TRT*NO2_binary+
(1|part)+(1|site), data = BARD1_AD), type="III")
plot_model(mod.ran.int,
axis.labels=c("1 x ICS + LABA*High NO2",
"2.5 x ICS + LABA*High NO2",
"5 x ICS*High NO2",
"High NO2",
"1 x ICS + LABA",
"2.5 x ICS + LABA",
"5 x ICS"),
show.values=TRUE, show.p=TRUE,
title="IRR of AACD")
sjPlot:: tab_model(mod.ran.int,
show.re.var= TRUE,
pred.labels =c("(Intercept)",
"5 x ICS",
"2.5 x ICS +LABA",
"1 x ICS + LABA",
"High NO2",
"5 x ICS*High NO2",
"2.5 x ICS + LABA*High NO2",
"1 x ICS + LABA*High  NO2"),
dv.labels= "Effects on AACD")
car::Anova(lmer(pfev_rate ~ TRT + NO2_binary+TRT*NO2_binary+
(1|part)+(1|site), data = BARD1_AD), type="III")
plot_model(mod.ran.int,
axis.labels=c("1 x ICS + LABA*High NO2",
"2.5 x ICS + LABA*High NO2",
"5 x ICS*High NO2",
"High NO2",
"1 x ICS + LABA",
"2.5 x ICS + LABA",
"5 x ICS"),
show.values=TRUE, show.p=TRUE,
title="IRR of AACD")
mod.ran.int <- lmer(pfev_rate  ~ TRT+ PM_binary+TRT*PM_binary+
(1|part)+(1|part), data = BARD1_AD)
summary(mod.ran.int)
car::Anova(glmer(pfev_rate ~ TRT + PM_binary+TRT*PM_binary+
(1|part)+(1|site), data = BARD1_AD), type="III")
plot_model(mod.ran.int,
axis.labels=c("1 x ICS + LABA*High PM 2.5",
"2.5 x ICS + LABA*High PM 2.5",
"5 x ICS*High PM 2.5",
"High PM 2.5",
"1 x ICS + LABA",
"2.5 x ICS + LABA",
"5 x ICS"),
show.values=TRUE, show.p=TRUE,
title="IRR of AACD")
sjPlot:: tab_model(mod.ran.int,
show.re.var= TRUE,
pred.labels =c("(Intercept)",
"5 x ICS",
"2.5 x ICS +LABA",
"1 x ICS + LABA",
"High PM 2.5",
"5 x ICS*High PM 2.5",
"2.5 x ICS + LABA*High PM 2.5",
"1 x ICS + LABA*High  PM 2.5"),
dv.labels= "Effects on AACD")
mod.ran.int <- lmer(pfev_rate  ~ TRT+NO2_binary+TRT*NO2_binary+
(1|part)+(1|site), data = BARD1_AD)
summary(mod.ran.int)
car::Anova(lmer(pfev_rate ~ TRT + NO2_binary+TRT*NO2_binary+
(1|part)+(1|site), data = BARD1_AD), type="III")
plot_model(mod.ran.int,
axis.labels=c("1 x ICS + LABA*High NO2",
"2.5 x ICS + LABA*High NO2",
"5 x ICS*High NO2",
"High NO2",
"1 x ICS + LABA",
"2.5 x ICS + LABA",
"5 x ICS"),
show.values=TRUE, show.p=TRUE,
title="IRR of AACD")
sjPlot:: tab_model(mod.ran.int,
show.re.var= TRUE,
pred.labels =c("(Intercept)",
"5 x ICS",
"2.5 x ICS +LABA",
"1 x ICS + LABA",
"High NO2",
"5 x ICS*High NO2",
"2.5 x ICS + LABA*High NO2",
"1 x ICS + LABA*High  NO2"),
dv.labels= "Effects on AACD")
plot_model(mod.ran.int,
axis.labels=c("1 x ICS + LABA*High NO2",
"2.5 x ICS + LABA*High NO2",
"5 x ICS*High NO2",
"High NO2",
"1 x ICS + LABA",
"2.5 x ICS + LABA",
"5 x ICS"),
show.values=TRUE, show.p=TRUE,
title="IRR of %PFEV1")
mod.ran.int <- lmer(pfev_rate  ~ TRT+O3_binary+TRT+TRT*O3_binary+
(1|part)+(1|site), data = BARD1_AD)
summary(mod.ran.int)
car::Anova(glmer(pfev_rate ~ TRT + O3_binary+TRT*O3_binary+
(1|part)+(1|site), data = BARD1_AD), type="III")
plot_model(mod.ran.int,
axis.labels=c("1 x ICS + LABA*High O3",
"2.5 x ICS + LABA*High O3",
"5 x ICS*High O3",
"High O3",
"1 x ICS + LABA",
"2.5 x ICS + LABA",
"5 x ICS"),
show.values=TRUE, show.p=TRUE,
title="IRR of AACD")
sjPlot:: tab_model(mod.ran.int,
show.re.var= TRUE,
pred.labels =c("(Intercept)",
"5 x ICS",
"2.5 x ICS +LABA",
"1 x ICS + LABA",
"High O3",
"5 x ICS*High O3",
"2.5 x ICS + LABA*High O3",
"1 x ICS + LABA*High  O3"),
dv.labels= "Effects on AACD")
car::Anova(lmer(pfev_rate ~ TRT + NO2_binary+TRT*NO2_binary+
(1|part)+(1|site), data = BARD1_AD), type="III")
knitr::opts_chunk$set(echo = TRUE)
setwd("S:/BARD Code and Data/BARD Analyses Liz")
library(tidyverse)
library(lme4)
library(ICC)
library(sjmisc)
library(sjPlot)
BARD1_ADULT = read.csv("adults_all_bard.csv")
#gis = readxl::read_xlsx ("gis_bard3.xlsx")
#BARD1_ADULT= merge(BARD1_ADULT, gis, by="part")
BARD1_ADULT2=BARD1_ADULT %>%
pivot_longer(
cols = starts_with("n_sigex"),
names_to = "sigex",
values_to = "sigex_count",
values_drop_na = TRUE
)
glimpse(BARD1_ADULT2) # take another look at the data structure -
# n_sigex has the period
# then i want to remove all the variables that belong to adults and other tier specific outcomes
BARD1_ADULT2=BARD1_ADULT2 %>%
select(-ends_with("_Q"), -ends_with("_R"), -ends_with("_S"), -ends_with("_T"))
# went from 88 to 59 variables
# lets look at the data
glimpse(BARD1_ADULT2) # good good
# then I want to transpose the NO2 variable
BARD1_ADULT2=BARD1_ADULT2 %>%
pivot_longer(
cols = starts_with("NO2_"),
names_to = "NO2",
values_to = "NO2_ij"
)
# left with 3292 observations, this needs to be trimmed down
glimpse(BARD1_ADULT2) # checked my variables, there are 16 rows per ID, need to match period to specific NO2
# Matching the NO2 to the specific period - this would effectively lead to the original 823 observations
BARD1_ADULT2 = BARD1_ADULT2 %>%
mutate(NO_ij =if_else(NO2 == "NO2_W" & sigex=="n_sigex_w", "NO2_ij",
if_else (NO2 == "NO2_X" & sigex=="n_sigex_x","NO2_ij",
if_else(NO2 == "NO2_Y" & sigex=="n_sigex_y", "NO2_ij",
if_else(NO2 == "NO2_Z" & sigex=="n_sigex_z", "NO2_ij", NA_character_)))))
# remove NAs to go back to 823
BARD1_ADULT2=BARD1_ADULT2 [!is.na(BARD1_ADULT2$NO_ij),] # yes!
# removed the newly created variable - no need for it anymore
BARD1_ADULT2=BARD1_ADULT2 %>%
select(-NO_ij)
#MOVING ON TO PM - essentially this is a repeated step - there has to be a faster way to complete this (for future me)
# take data set and make it long again based on PM
BARD1_ADULT2_1=BARD1_ADULT2 %>%
pivot_longer(
cols = starts_with("PM_"),
names_to = "PM_25",
values_to = "PM_ij"
)
## Matching the pm to the specific period - this would effectively lead to the original 823 observations
BARD1_ADULT2_1 = BARD1_ADULT2_1 %>%
mutate(PM25_ij =if_else(PM_25 == "PM_W" & sigex=="n_sigex_w", "PM_ij",
if_else (PM_25 == "PM_X" & sigex=="n_sigex_x","PM_ij",
if_else(PM_25 == "PM_Y" & sigex=="n_sigex_y", "PM_ij",
if_else(PM_25 == "PM_Z" & sigex=="n_sigex_z", "PM_ij", NA_character_)))))
# remove NAs to go back to 823
BARD1_ADULT2_1=BARD1_ADULT2_1 [!is.na(BARD1_ADULT2_1$PM25_ij),]
# removed the newly created variable - no need for it anymore
BARD1_ADULT2_1=BARD1_ADULT2_1 %>%
select(-PM25_ij)
#NOW OZONE - repeated steps turning Ozone into long format
BARD1_ADULT2_2=BARD1_ADULT2_1 %>%
pivot_longer(
cols = starts_with("O3_"),
names_to = "O_3",
values_to = "O3_ij"
)
## Matching the pm to the specific period - this would effectively lead to the original 823 observations
BARD1_ADULT2_2 = BARD1_ADULT2_2 %>%
mutate(OZONE_ij =if_else(O_3 == "O3_W" & sigex=="n_sigex_w", "O3_ij",
if_else (O_3 == "O3_X" & sigex=="n_sigex_x","O3_ij",
if_else(O_3 == "O3_Y" & sigex=="n_sigex_y", "O3_ij",
if_else(O_3 == "O3_Z" & sigex=="n_sigex_z", "O3_ij", NA_character_)))))
# remove NAs to go back to 823
BARD1_ADULT2_2=BARD1_ADULT2_2 [!is.na(BARD1_ADULT2_2$OZONE_ij),]
# removed the newly created variable - no need for it anymore
BARD1_ADULT2_2=BARD1_ADULT2_2 %>%
select(-OZONE_ij)
#take a look at the data
glimpse(BARD1_ADULT2_2) # much better
BARD1_ADULT2_2=BARD1_ADULT2_2 %>% # renamed this variable, so it is easier to include in the model
rename(PERIOD_j = sigex)
#OK- data structure as wished
BARD1_ADULT3=BARD1_ADULT2_2 # doing this so i dont have to change the code moving forward
BARD1_AD=BARD1_ADULT3 # doing this so i dont have to ADange the code moving forward not sure why it is repeated...
glimpse(BARD1_AD)  # looks ready for analyses
# lets see what the sample size is:
sample_size = unique(BARD1_AD$part) # 294 different individuals
BARD1_AD=BARD1_ADULT %>%
pivot_longer(
cols = starts_with("aacd"),
names_to = "aacd",
values_to = "aacd_rate",
values_drop_na = TRUE
)
glimpse(BARD1_AD) # take another look at the data structure -
# n_sigex has the period
# then i want to remove all the variables that belong to adults and other tier specific outcomes
BARD1_AD=BARD1_AD %>%
select( -ends_with("_Q"), -ends_with("_R"), -ends_with("_S"), -ends_with("_T"))
# went from 88 to 59 variables
# lets look at the data
glimpse(BARD1_AD) # good good
# then I want to transpose the NO2 variable
BARD1_AD=BARD1_AD %>%
pivot_longer(
cols = starts_with("NO2_"),
names_to = "NO2",
values_to = "NO2_ij"
)
# left with 3292 observations, this needs to be trimmed down
glimpse(BARD1_AD) # checked my variables, there are 16 rows per ID, need to match period to specific NO2
# Matching the NO2 to the specific period - this would effectively lead to the original 823 observations
BARD1_ADULT2 = BARD1_AD %>%
mutate(NO_ij =if_else(NO2 == "NO2_W" & aacd=="aacd_w", "NO2_ij",
if_else (NO2 == "NO2_Y" & aacd=="aacd_y","NO2_ij",
if_else(NO2 == "NO2_X" & aacd=="aacd_x", "NO2_ij",
if_else(NO2 == "NO2_Z" & aacd=="aacd_z", "NO2_ij", NA_character_)))))
# remove NAs to go back to 823
BARD1_ADULT2=BARD1_ADULT2 [!is.na(BARD1_ADULT2$NO_ij),] # yes!
# removed the newly created variable - no need for it anymore
BARD1_ADULT2=BARD1_ADULT2 %>%
select(-NO_ij)
#MOVING ON TO PM - essentially this is a repeated step - there has to be a faster way to complete this (for future me)
# take data set and make it long again based on PM
BARD1_ADULT2_1=BARD1_ADULT2 %>%
pivot_longer(
cols = starts_with("PM_"),
names_to = "PM_25",
values_to = "PM_ij"
)
## Matching the pm to the specific period - this would effectively lead to the original 823 observations
BARD1_ADULT2_1 = BARD1_ADULT2_1 %>%
mutate(PM25_ij =if_else(PM_25 == "PM_W" & aacd=="aacd_w", "PM_ij",
if_else (PM_25 == "PM_Y" & aacd=="aacd_y","PM_ij",
if_else(PM_25 == "PM_X" & aacd=="aacd_x", "PM_ij",
if_else(PM_25 == "PM_Z" & aacd=="aacd_z", "PM_ij", NA_character_)))))
# remove NAs to go back to 823
BARD1_ADULT2_1=BARD1_ADULT2_1 [!is.na(BARD1_ADULT2_1$PM25_ij),]
# removed the newly created variable - no need for it anymore
BARD1_ADULT2_1=BARD1_ADULT2_1 %>%
select(-PM25_ij)
#NOW OZONE - repeated steps turning Ozone into long format
BARD1_ADULT2_2=BARD1_ADULT2_1 %>%
pivot_longer(
cols = starts_with("O3_"),
names_to = "O_3",
values_to = "O3_ij"
)
## Matching the pm to the specific period - this would effectively lead to the original 823 observations
BARD1_ADULT2_2 = BARD1_ADULT2_2 %>%
mutate(OZONE_ij =if_else(O_3 == "O3_W" & aacd=="aacd_w", "O3_ij",
if_else (O_3 == "O3_Y" & aacd=="aacd_y","O3_ij",
if_else(O_3 == "O3_X" & aacd=="aacd_x", "O3_ij",
if_else(O_3 == "O3_Z" & aacd=="aacd_z", "O3_ij", NA_character_)))))
# remove NAs to go back to 823
BARD1_ADULT2_2=BARD1_ADULT2_2 [!is.na(BARD1_ADULT2_2$OZONE_ij),]
# removed the newly created variable - no need for it anymore
BARD1_ADULT2_2=BARD1_ADULT2_2 %>%
select(-OZONE_ij)
#take a look at the data
glimpse(BARD1_ADULT2_2) # much better
BARD1_ADULT2_2=BARD1_ADULT2_2 %>% # renamed this variable, so it is easier to include in the model
rename(PERIOD_j = aacd)
#OK- data structure as wished
BARD1_ADULT3=BARD1_ADULT2_2 # doing this so i dont have to change the code moving forward
BARD1_AD=BARD1_ADULT3 # doing this so i dont have to change the code moving forward not sure why it is repeated...
glimpse(BARD1_AD)  # looks ready for analyses
# lets see what the sample size is:
sample_size = unique(BARD1_AD$part) # 213 different individuals
BARD1_AD = BARD1_AD %>%
mutate(TRT = if_else(PERIOD_j == "aacd_w", "W", if_else(PERIOD_j=="aacd_y","Y", if_else(PERIOD_j=="aacd_x","X", if_else(PERIOD_j=="aacd_z", "Z", NA_character_)))))
BARD1_AD$TRT = as.factor(BARD1_AD$TRT) # TURNING TRT INTO A FACTOR
BARD1_AD$TRT = relevel(BARD1_AD$TRT, ref = "Y")
BARD1_AD <- BARD1_AD%>%
mutate(NO2.scaled = scale(NO2_ij),
PM.scaled = scale(PM_ij),
O3.scaled = scale(O3_ij),
site.scaled =scale(site))
set_theme(
geom.outline.color = "antiquewhite4",
geom.outline.size = 1,
geom.label.size = 2,
geom.label.color = "grey50",
title.color = "midnightblue",
title.size = 1.5,
axis.angle.x = 90,
axis.textcolor = "midnightblue",
base = theme_bw()
)
#ICC outcome
Exa.ICC <- ICCest(part, aacd_rate, data = BARD1_AD) ##not so great: 0.17(0.10,0.24)
Exa.ICC$ICC
Exa.ICC$LowerCI
Exa.ICC$UpperCI
BARD1_AD = BARD1_AD %>%
mutate(PM_binary = if_else(TRT == "Y" & PM_ij >= 7.95, "High_PM",
if_else(TRT == "W" & PM_ij >= 7.98, "High_PM",
if_else(TRT == "X" & PM_ij >= 7.93, "High_PM",
if_else(TRT == "Z" & PM_ij >= 7.73, "High_PM", "Low_PM", NA_character_)))))
BARD1_AD = BARD1_AD %>%
mutate(NO2_binary = if_else(TRT == "Y" & NO2_ij >= 9.41, "High_NO2",
if_else(TRT == "W" & NO2_ij >= 9.53, "High_NO2",
if_else(TRT == "X" & NO2_ij >= 9.15, "High_NO2",
if_else(TRT == "Z" & NO2_ij >= 9.46, "High_NO2", "Low_NO2", NA_character_)))))
BARD1_AD = BARD1_AD %>%
mutate(O3_binary = if_else(TRT == "Y" & O3_ij >= 24.01, "High_O3",
if_else(TRT == "W" & O3_ij >= 25.22, "High_O3",
if_else(TRT == "X" & O3_ij >= 25.76, "High_O3",
if_else(TRT == "Z" & O3_ij >= 25.64, "High_O3", "Low_O3", NA_character_)))))
BARD1_AD$NO2_binary = as.factor(BARD1_AD$NO2_binary)
BARD1_AD$NO2_binary = relevel(BARD1_AD$NO2_binary, ref = "Low_NO2")
BARD1_AD$PM_binary = as.factor(BARD1_AD$PM_binary)
BARD1_AD$PM_binary = relevel(BARD1_AD$PM_binary, ref = "Low_PM")
BARD1_AD$O3_binary = as.factor(BARD1_AD$O3_binary)
BARD1_AD$O3_binary = relevel(BARD1_AD$O3_binary, ref = "Low_O3")
mod.ran.int <- lmer(aacd_rate  ~ TRT+ PM_binary + TRT*PM_binary+# SAMPLE SIZE 211
(1|part)+(1|site), data = BARD1_AD)
summary(mod.ran.int)
car::Anova(glmer(aacd_rate ~ TRT + PM_binary+TRT*PM_binary+
(1|part)+(1|site), data = BARD1_AD), type="III")
plot_model(mod.ran.int,
axis.labels=c("1 x ICS + LABA*High PM 2.5",
"2.5 x ICS + LABA*High PM 2.5",
"5 x ICS*High PM 2.5",
"High PM 2.5",
"1 x ICS + LABA",
"2.5 x ICS + LABA",
"5 x ICS"),
show.values=TRUE, show.p=TRUE,
title="Annualized Asthma Control Days")
sjPlot:: tab_model(mod.ran.int,
show.re.var= TRUE,
pred.labels =c("(Intercept)",
"5 x ICS",
"2.5 x ICS +LABA",
"1 x ICS + LABA",
"High PM 2.5",
"5 x ICS*High PM",
"2.5 x ICS + LABA*High PM 2.5",
"1 x ICS + LABA*High  PM 2.5"),
dv.labels= "Effects on AACD")
knitr::opts_chunk$set(echo = TRUE)
setwd("S:/BARD Code and Data/BARD Analyses Liz")
library(tidyverse)
library(lme4)
library(ICC)
library(sjmisc)
library(sjPlot)
BARD1_ADULT = read.csv("adults_all_bard.csv") #The BARD Dataset has 294 adults
#gis = readxl::read_xlsx ("gis_bard3.xlsx")
#BARD1_ADULT= merge(BARD1_ADULT, gis, by="part")
View(BARD1_ADULT)
knitr::opts_chunk$set(echo = TRUE)
setwd("S:/BARD Code and Data/BARD Analyses Liz")
library(tidyverse)
library(lme4)
library(ICC)
library(sjmisc)
library(sjPlot)
BARD1_ADULT = read.csv("adults_all_bard.csv") #The BARD Dataset has 294 adults
#gis = readxl::read_xlsx ("gis_bard3.xlsx")
#BARD1_ADULT= merge(BARD1_ADULT, gis, by="part")
BARD1_ADULT2=BARD1_ADULT %>%
pivot_longer(
cols = starts_with("n_sigex"),
names_to = "sigex",
values_to = "sigex_count",
values_drop_na = TRUE
)
glimpse(BARD1_ADULT2) # take another look at the data structure -
# n_sigex has the period
# then i want to remove all the variables that belong to adults and other tier specific outcomes
BARD1_ADULT2=BARD1_ADULT2 %>%
select(-ends_with("_Q"), -ends_with("_R"), -ends_with("_S"), -ends_with("_T"))
# went from 88 to 59 variables
# lets look at the data
glimpse(BARD1_ADULT2) # good good
# then I want to transpose the NO2 variable
BARD1_ADULT2=BARD1_ADULT2 %>%
pivot_longer(
cols = starts_with("NO2_"),
names_to = "NO2",
values_to = "NO2_ij"
)
# left with 3292 observations, this needs to be trimmed down
glimpse(BARD1_ADULT2) # checked my variables, there are 16 rows per ID, need to match period to specific NO2
# Matching the NO2 to the specific period - this would effectively lead to the original 823 observations
BARD1_ADULT2 = BARD1_ADULT2 %>%
mutate(NO_ij =if_else(NO2 == "NO2_W" & sigex=="n_sigex_w", "NO2_ij",
if_else (NO2 == "NO2_X" & sigex=="n_sigex_x","NO2_ij",
if_else(NO2 == "NO2_Y" & sigex=="n_sigex_y", "NO2_ij",
if_else(NO2 == "NO2_Z" & sigex=="n_sigex_z", "NO2_ij", NA_character_)))))
# remove NAs to go back to 823
BARD1_ADULT2=BARD1_ADULT2 [!is.na(BARD1_ADULT2$NO_ij),] # yes!
# removed the newly created variable - no need for it anymore
BARD1_ADULT2=BARD1_ADULT2 %>%
select(-NO_ij)
#MOVING ON TO PM - essentially this is a repeated step - there has to be a faster way to complete this (for future me)
# take data set and make it long again based on PM
BARD1_ADULT2_1=BARD1_ADULT2 %>%
pivot_longer(
cols = starts_with("PM_"),
names_to = "PM_25",
values_to = "PM_ij"
)
## Matching the pm to the specific period - this would effectively lead to the original 823 observations
BARD1_ADULT2_1 = BARD1_ADULT2_1 %>%
mutate(PM25_ij =if_else(PM_25 == "PM_W" & sigex=="n_sigex_w", "PM_ij",
if_else (PM_25 == "PM_X" & sigex=="n_sigex_x","PM_ij",
if_else(PM_25 == "PM_Y" & sigex=="n_sigex_y", "PM_ij",
if_else(PM_25 == "PM_Z" & sigex=="n_sigex_z", "PM_ij", NA_character_)))))
# remove NAs to go back to 823
BARD1_ADULT2_1=BARD1_ADULT2_1 [!is.na(BARD1_ADULT2_1$PM25_ij),]
# removed the newly created variable - no need for it anymore
BARD1_ADULT2_1=BARD1_ADULT2_1 %>%
select(-PM25_ij)
#NOW OZONE - repeated steps turning Ozone into long format
BARD1_ADULT2_2=BARD1_ADULT2_1 %>%
pivot_longer(
cols = starts_with("O3_"),
names_to = "O_3",
values_to = "O3_ij"
)
## Matching the pm to the specific period - this would effectively lead to the original 823 observations
BARD1_ADULT2_2 = BARD1_ADULT2_2 %>%
mutate(OZONE_ij =if_else(O_3 == "O3_W" & sigex=="n_sigex_w", "O3_ij",
if_else (O_3 == "O3_X" & sigex=="n_sigex_x","O3_ij",
if_else(O_3 == "O3_Y" & sigex=="n_sigex_y", "O3_ij",
if_else(O_3 == "O3_Z" & sigex=="n_sigex_z", "O3_ij", NA_character_)))))
# remove NAs to go back to 823
BARD1_ADULT2_2=BARD1_ADULT2_2 [!is.na(BARD1_ADULT2_2$OZONE_ij),]
# removed the newly created variable - no need for it anymore
BARD1_ADULT2_2=BARD1_ADULT2_2 %>%
select(-OZONE_ij)
#take a look at the data
glimpse(BARD1_ADULT2_2) # much better
BARD1_ADULT2_2=BARD1_ADULT2_2 %>% # renamed this variable, so it is easier to include in the model
rename(PERIOD_j = sigex)
#OK- data structure as wished
BARD1_ADULT3=BARD1_ADULT2_2 # doing this so i dont have to change the code moving forward
BARD1_AD=BARD1_ADULT3 # doing this so i dont have to ADange the code moving forward not sure why it is repeated...
glimpse(BARD1_AD)  # looks ready for analyses
# lets see what the sample size is:
sample_size = unique(BARD1_AD$part) # 294 different individuals
install.packages("cli")
library(tidyverse)
install.packages(c("Hmisc", "tibble"))
install.packages(c("boot", "class", "codetools", "foreign", "MASS", "Matrix", "mgcv", "nlme", "spatial", "survival"), lib="C:/Program Files/R/R-4.2.2/library")
install.packages("MASS", lib="C:/Program Files/R/R-4.2.2/library")
shiny::runApp('C:/Users/lg688/OneDrive - Drexel University/Desktop/Drexel/Other/lizbethgomez.github.io/tv_app')
runApp('C:/Users/lg688/OneDrive - Drexel University/Desktop/Drexel/Other/lizbethgomez.github.io/tv_app')
runApp('C:/Users/lg688/OneDrive - Drexel University/Desktop/Drexel/Other/lizbethgomez.github.io/tv_app')
setwd("C:/Users/lg688/OneDrive - Drexel University/Desktop/Drexel/Other/lizbethgomez.github.io")
setwd("C:/Users/lg688/OneDrive - Drexel University/Desktop/Drexel/Other/lizbethgomez.github.io")
runApp('Evictions')
runApp('Evictions')
runApp('Effectiveness')
knitr::include_graphics("gomez_web.PNG")
knitr::include_graphics("gomez_web.jpg")
runApp('Effectiveness')
